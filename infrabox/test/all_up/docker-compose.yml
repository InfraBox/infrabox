version: "3.3"

services:
    gitlab:
        image: "gitlab/gitlab-ce"
        restart: always
        hostname: 'gitlab'
        #logging:
        #    driver: none
        environment:
            GITLAB_OMNIBUS_CONFIG: |
                external_url 'http://gitlab:30080/'
                gitlab_rails['initial_root_password'] = 'hello123'
        ports:
            - "30080:30080"
            - "30022:22"
        # the following are hints on what volumes to mount if you want to persist data
        #volumes:
        #    - data/gitlab/config:/etc/gitlab:rw
        #    - data/gitlab/logs:/var/log/gitlab:rw
        #    - data/gitlab/data:/var/opt/gitlab:rw
        links:
            - gitlab-trigger
        #networks:
        #    - infrabox_test

    minio:
        image: minio/minio
        command: server /data
        environment:
            - MINIO_ACCESS_KEY=AKIAIOSFODNN7EXAMPLE
            - MINIO_SECRET_KEY=wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY
        ports:
            - "9009:9000"
        #networks:
        #    - infrabox_test

    minio-init:
        build:
            context: ../../../
            dockerfile: src/docker-compose/minio-init/Dockerfile
        links:
            - minio
        #networks:
        #    - infrabox_test

    postgres:
        build:
            context: ../../../
            dockerfile: infrabox/utils/storage/postgres/Dockerfile
        ports:
            - "5439:5432"
        #networks:
        #    - infrabox_test

    docker-auth:
        build:
            context: ../../../
            dockerfile: src/docker-registry/auth/Dockerfile
        environment:
            - INFRABOX_VERSION=local
            - INFRABOX_SERVICE=docker-registry-auth
            - INFRABOX_DATABASE_HOST=postgres
            - INFRABOX_DATABASE_USER=postgres
            - INFRABOX_DATABASE_PASSWORD=postgres
            - INFRABOX_DATABASE_DB=postgres
            - INFRABOX_DATABASE_PORT=5432
        #networks:
        #     - infrabox_test

        #docker-registry-nginx:
    #    build:
    #        context: ../../../
    #        dockerfile: src/docker-registry/nginx/Dockerfile
    #    links:
    #        - docker-registry
    #        - docker-registry-auth
    #    environment:
    #        - INFRABOX_DOCKER_REGISTRY_ADMIN_PASSWORD=admin
    #        - INFRABOX_DOCKER_REGISTRY_ADMIN_USERNAME=admin
    #        - INFRABOX_AUTH_HOST=docker-registry-auth
    #        - INFRABOX_REGISTRY_HOST=docker-registry
    #    #networks:
    #    #    - infrabox_test

    docker-registry:
        image: registry
        restart: always
        ports:
            - "5000:5000"
        #networks:
        #    - infrabox_test

    #docker_auth:
    #    build:
    #        context: ../../../
    #        dockerfile: infrabox/test-registry/Dockerfile_auth
    #    environment:
    #        - INFRABOX_SERVICE=registry-auth
    #        - INFRABOX_VERSION=local
    #        - INFRABOX_DATABASE_USER=postgres
    #        - INFRABOX_DATABASE_PASSWORD=postgres
    #        - INFRABOX_DATABASE_HOST=postgres
    #        - INFRABOX_DATABASE_PORT=5432
    #        - INFRABOX_DATABASE_DB=postgres
    docker-nginx:
        build:
            context: ../../../
            dockerfile: src/docker-registry/nginx/Dockerfile
        links:
            - docker-registry:docker-registry
            - docker-auth:docker-registry-auth
        environment:
            - INFRABOX_DOCKER_REGISTRY_ADMIN_PASSWORD=admin_pw
            - INFRABOX_DOCKER_REGISTRY_ADMIN_USERNAME=admin_user
            - INFRABOX_AUTH_HOST=infrabox-docker-registry-auth
            - INFRABOX_REGISTRY_HOST=infrabox-docker-registry

    static:
        build:
            context: ../../../
            dockerfile: infrabox/deploy/static/Dockerfile

    nginx-ingress:
        build:
            context: ../../../
            dockerfile: src/docker-compose/ingress/Dockerfile
        ports:
            - "8090:80"
        links:
            - static
            - docker-nginx:docker-registry-nginx
            - api
        #networks:
        #    - infrabox_test

    gitlab-trigger:
        build:
            context: ../../../
            dockerfile: src/gitlab/trigger/Dockerfile
        environment:
            - INFRABOX_VERSION=local
            - INFRABOX_SERVICE=gitlab-trigger
            - INFRABOX_DATABASE_HOST=postgres
            - INFRABOX_DATABASE_USER=postgres
            - INFRABOX_DATABASE_PASSWORD=postgres
            - INFRABOX_DATABASE_DB=postgres
            - INFRABOX_DATABASE_PORT=5432
            - INFRABOX_GITLAB_WEBHOOK_SECRET=p45c7cf0a894f123d1d5834585c9080a9c423fdab23aebbc34c37aac1a5432ha
        ports:
            - "8011:8011"
        #networks:
        #    - infrabox_test

    job-git:
        build:
             context: ../../../
             dockerfile: src/job/git/Dockerfile
        environment:
            - INFRABOX_SERVICE=job-git
            - INFRABOX_VERSION=local
            - INFRABOX_JOB_REPO_MOUNT_PATH=/tmp/infrabox-compose/repo
            - INFRABOX_GENERAL_DONT_CHECK_CERTIFICATES=true
        volumes:
            - /tmp/infrabox-compose/repo:/tmp/infrabox-compose/repo
        #networks:
        #     - infrabox_test

    dc-scheduler:
        build:
            context: ../../../
            #using custom dockerfile due to rsa keys copy
            dockerfile: infrabox/test/all_up/dc_scheduler_up/Dockerfile
        tty: true
        environment:
            - INFRABOX_SERVICE=dc-scheduler
            - INFRABOX_VERSION=local
            - INFRABOX_DATABASE_DB=postgres
            - INFRABOX_DATABASE_USER=postgres
            - INFRABOX_DATABASE_PASSWORD=postgres
            - INFRABOX_DATABASE_HOST=postgres
            - INFRABOX_DATABASE_PORT=5432
            - INFRABOX_DOCKER_REGISTRY=registry:5000
            - INFRABOX_JOB_VERSION=1
            - INFRABOX_JOB_MAX_OUTPUT_SIZE=65536
            - INFRABOX_JOB_GIT_URL=job-git:8033
            - INFRABOX_RSA_PRIVATE_KEY_PATH=/var/run/secrets/rsa/id_rsa
            - INFRABOX_RSA_PUBLIC_KEY_PATH=/var/run/secrets/rsa/id_rsa.pub
            - INFRABOX_JOB_IMAGE_TAG=testjobimage
            - INFRABOX_DOCKER_COMPOSE_PROJECT_PREFIX=allup
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
            - /tmp/infrabox-compose/repo:/tmp/infrabox-compose/repo
        #networks:
        #    - infrabox_test
        #external_links:
        #    - registry
        links:
            - postgres
            #- docker-registry

    api:
        build:
            context: ../../../
            #using custom dockerfile due to rsa keys copy
            dockerfile: infrabox/test/all_up/api_up/Dockerfile
        environment:
            # DB Configuration
            - INFRABOX_DATABASE_HOST=postgres
            - INFRABOX_DATABASE_USER=postgres
            - INFRABOX_DATABASE_PASSWORD=postgres
            - INFRABOX_DATABASE_DB=postgres
            - INFRABOX_DATABASE_PORT=5432

            # Service Config
            - INFRABOX_VERSION=local
            - INFRABOX_SERVICE=api
            - INFRABOX_LOG_LEVEL=debug
            - INFRABOX_ROOT_URL=http://localhost:8880
            - INFRABOX_JOB_MAX_OUTPUT_SIZE=65536
            - INFRABOX_JOB_SECURITY_CONTEXT_CAPABILITIES_ENABLED=false
            - INFRABOX_CLUSTER_NAME=master
            - INFRABOX_GENERAL_REPORT_ISSUE_URL=no_url
            - INFRABOX_PORT=8880
            - GOOGLE_APPLICATION_CREDENTIALS=
            - CODECOV_TOKEN=$CODECOV_TOKEN

            # S3 Config
            - INFRABOX_STORAGE_GCS_ENABLED=false
            - INFRABOX_STORAGE_S3_ENABLED=true
            - INFRABOX_STORAGE_S3_SECURE=false
            - INFRABOX_STORAGE_S3_REGION=us-east-1
            - INFRABOX_STORAGE_S3_ENDPOINT=http://minio
            - INFRABOX_STORAGE_S3_PORT=9000
            - INFRABOX_STORAGE_S3_BUCKET=infrabox
            - INFRABOX_STORAGE_S3_ACCESS_KEY=AKIAIOSFODNN7EXAMPLE
            - INFRABOX_STORAGE_S3_SECRET_KEY=wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY

            # Account
            - INFRABOX_ACCOUNT_SIGNUP_ENABLED=true
            - INFRABOX_ACCOUNT_LDAP_ENABLED=false

            # Github
            - INFRABOX_GITHUB_ENABLED=true
            - INFRABOX_GITHUB_LOGIN_ENABLED=true
            - INFRABOX_GITHUB_CLIENT_ID=69cbd51fe6733298cd08x
            - INFRABOX_GITHUB_CLIENT_SECRET=5e7e8f519dbe84947b47226aca8ac0f3b8353303
            - INFRABOX_GITHUB_LOGIN_URL=https://github.com/login
            - INFRABOX_GITHUB_API_URL=https://api.github.com
            - INFRABOX_GITHUB_WEBHOOK_SECRET=p45c7cf0a894f123d1d5834585c9080a9c423fdab23aebbc34c37aac1a5432ha


            # Gitlab
            - INFRABOX_GITLAB_ENABLED=true
            - INFRABOX_GITLAB_LOGIN_ENABLED=true
            - INFRABOX_GITLAB_API_URL=http://gitlab:30080/api/v4
            - INFRABOX_GITLAB_LOGIN_URL=http://localhost:30080/users/sign_in
            - INFRABOX_GITLAB_OAUTH_URL=http://localhost:30080/oauth
            - INFRABOX_GITLAB_APPLICATION_ID=8df75cfe2d6695f0e8c091ee63c80e0cabc80daa99448a797c3564bc93ce75ea
            - INFRABOX_GITLAB_APPLICATION_SECRET=5a6f94300b709167e7b42956f01d82e1d45260f7f397450d9a985e42b2638506
            - INFRABOX_GITLAB_WEBHOOK_ID=2fdse5871a4c1fee54221q24bde54bc5b2ca56h5c3b76e485f131e765a7g234w
            - INFRABOX_GITLAB_WEBHOOK_SECRET=p45c7cf0a894f123d1d5834585c9080a9c423fdab23aebbc34c37aac1a5432ha

            # Gerrit
            - INFRABOX_GERRIT_ENABLED=false

            # RSA
            - INFRABOX_RSA_PRIVATE_KEY_PATH=/var/run/secrets/rsa/id_rsa
            - INFRABOX_RSA_PUBLIC_KEY_PATH=/var/run/secrets/rsa/id_rsa.pub
        ports:
            - "8880:8880"

        links:
            - postgres
            - minio
            - gitlab

        #networks:
        #     - infrabox_test

#networks:
#  infrabox_test:
#    external: true
